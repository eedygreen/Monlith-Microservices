language: node_js
node_js:
  - 12

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"
jobs:
  include:
    # - stage: build base image
    #   script:
    #     - docker --version # print the version for logging
    #     - docker build -t nodebaseimage udagram-api/base_image/
    #     - docker tag nodebaseimage eedy/nodebaseimage:v1
    #   after_success:
    #     - echo "$DOCKERUB_TOKEN" | docker login --username "$DOCKER_NAME" --password-stdin
    #     - docker push eedy/nodebaseimage:v1

    - stage: build backend-api
      script:
        - docker build -t backendapiusersimage udagram-api/udagram-api-user/
        - docker build -t backendapifeedimage udagram-api/udagram-api-feed/
        - docker tag backendapifeedimage eedy/backendapifeedimage:latest
        - docker tag backendapiusersimage eedy/backendapiusersimage:latest
      after_success:
        - echo "$DOCKERUB_TOKEN" | docker login --username "$DOCKER_NAME" --password-stdin
        - docker push eedy/backendapifeedimage:latest
        - docker push eedy/backendapiusersimage:latest

    - stage: build reverse-proxy
      language: bash 
      script:
        - docker build -t reverseproxy reverse_proxy/
        - docker tag reverseproxy eedy/reverseproxy
      after_success:
        - echo "$DOCKERUB_TOKEN" | docker login -u "$DOCKER_NAME" --password-stdin
        - docker push eedy/reverseproxy:latest
    
    - stage: build frontend image
      script:
        - docker build -t frontend udagram-frontend/
        - docker tag frontend eedy/frontend:latest
      after_success:
        - echo "$DOCKERUB_TOKEN" | docker login -u "$DOCKER_NAME" --password-stdin
        - docker push eedy/frontend:latest 